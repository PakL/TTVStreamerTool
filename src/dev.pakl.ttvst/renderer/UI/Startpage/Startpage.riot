<Startpage>
	<LoginComponent></LoginComponent>


	<script>
		const riot = require('riot');
		import LoginComponent from './LoginComponent.riot';
		riot.register('logincomponent', LoginComponent);
		export default {
			logincompRiot: null,

			onBeforeMount(props, state) {
				this.__ = global.TTVST.i18n.__;
			},

			onMounted(props, state) {
				let riotSym = Object.getOwnPropertySymbols(this.$('logincomponent'))[0];
				this.logincompRiot = this.$('logincomponent')[riotSym];
			},

			setLoginCallback(callback) {
				if(typeof(callback) == 'function' && this.logincompRiot !== null) {
					this.logincompRiot.setLoginCallback(callback);
				}
			},

			setLogoutCallback(callback) {
				if(typeof(callback) == 'function' && this.logincompRiot !== null) {
					this.logincompRiot.setLogoutCallback(callback);
				}
			},

			updateLogin(state) {
				if(this.logincompRiot !== null) {
					this.logincompRiot.update(state);
				}
			}
		}
	</script>
</Startpage>